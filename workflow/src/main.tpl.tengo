// "hello world"
wf := import("@platforma-sdk/workflow-tengo:workflow")
exec := import("@platforma-sdk/workflow-tengo:exec")
ORAResPfconvParamsLib := import(":ORAResImportParams")
xsv := import("@platforma-sdk/workflow-tengo:pframes.xsv")
assets := import("@platforma-sdk/workflow-tengo:assets")
pframes := import("@platforma-sdk/workflow-tengo:pframes")
pSpec := import("@platforma-sdk/workflow-tengo:pframes.spec")

wf.prepare(func(args){
	return{
		resolvedInput: wf.resolve(args.geneListRef, { errIfMissing: true })
	}
})

wf.body(func(args) {

	blockId := wf.blockId().getDataAsJson()
	input := args.resolvedInput
	inputSpec := input.spec

	species := inputSpec.domain["pl7.app/species"]
	pathwayCollection := args.pathwayCollection

	csvGeneList := xsv.exportFrame([input], "csv", {})

	ORA := exec.builder().
		software(assets.importSoftware("@platforma-open/milaboratories.functional-analysis.software:over-representation-analysis")).
		arg("--input").arg("geneList.csv").
		arg("--pathway_collection").arg(pathwayCollection).
		arg("--species").arg(species).
		addFile("geneList.csv", csvGeneList).
		saveFile("pathwayEnrichmentResults.csv").
		printErrStreamToStdout().
		saveStdoutContent().
		cache(24 * 60 * 60 * 1000).
		run()

	ORAResImportParams := ORAResPfconvParamsLib.getColumns(inputSpec)
	ORAPf := xsv.importFile(ORA.getFile("pathwayEnrichmentResults.csv"), "csv", ORAResImportParams)


	return {
		outputs: {
			ORAPf: pframes.exportFrame(ORAPf)
		},

		exports: {}
	}
})

